<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lex | Dan Horrigan]]></title>
  <link href="http://dandoescode.com/blog/categories/lex/atom.xml" rel="self"/>
  <link href="http://dandoescode.com/"/>
  <updated>2013-01-31T02:46:34-05:00</updated>
  <id>http://dandoescode.com/</id>
  <author>
    <name><![CDATA[Dan Horrigan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lex 2.3]]></title>
    <link href="http://dandoescode.com/blog/2013/01/11/lex-2-dot-3/"/>
    <updated>2013-01-11T17:17:00-05:00</updated>
    <id>http://dandoescode.com/blog/2013/01/11/lex-2-dot-3</id>
    <content type="html"><![CDATA[<p>Lex 2.3 has just been released.  This is the third version released today, two bug fixes and this minor release.  This version changes the behaviour of Callback Tags slightly.</p>

<p>In 2.2 I attempted to make Callback Tags less greedy...this failed, miserably.  It caused all sorts of unforeseen issues.  So, I have rolled back those changes (for the most part).</p>

<p>Callback Tags are now greedy on purpose.  As I explain in the README: "If a Callback Tag can be used in single or block form, then when using it in it's singular form, it must be closed (just like HTML)".  This is exactly how HTML works.  Consider you want to insert an empty paragraph, you can't just do <code>&lt;p&gt;</code>, that would cause massive issues on the page.  So instead you do <code>&lt;p&gt;&lt;/p&gt;</code>.  Same concept in Lex now.</p>

<p>Now, I know this could get unwieldy very quickly.  Take this contrived example:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{ foo.bar.baz }}{{ /foo.bar.baz }}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>{{ foo.bar.baz }}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Content
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>{{ /foo.bar.baz }}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It isn't too bad, but it is ugly and feels gross, and will get worse over time.  But, have no fear, I have added the concept of Self Closing Callback Tags into 2.3.</p>

<p>This means you can self-close a Lex Callback Tag exactly as you would an HTML tag (e.g. <code>&lt;p /&gt;</code>).  So, our above example could be rewritten as follows:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{ foo.bar.baz /}}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>{{ foo.bar.baz }}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Content
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>{{ /foo.bar.baz }}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You can use this concept any time your Callback Tag does not require any content.</p>

<h3>Getting It</h3>

<p>Update your Composer requirement to <code>2.3.*</code>.</p>

<p><a href="https://github.com/pyrocms/lex">View on GitHub</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lex 2.2 and a New Home]]></title>
    <link href="http://dandoescode.com/blog/2012/12/06/lex-2-dot-2-and-a-new-home/"/>
    <updated>2012-12-06T14:21:00-05:00</updated>
    <id>http://dandoescode.com/blog/2012/12/06/lex-2-dot-2-and-a-new-home</id>
    <content type="html"><![CDATA[<p>Lex 2.2 has just been released.  Not much has changed, but a Minor version bump was required due to a backwards-incompatibility issue.</p>

<h4>Changelog</h4>

<ul>
<li>Fixed a test which was PHP 5.4 only.</li>
<li>Added PHPUnit as a composer dev requirement.</li>
<li>Added a Lex\ParsingException class which is thrown when a parsing exception occurs.</li>
</ul>


<p>The 3rd point is the one that caused the version bump.  Before it would simply dump a message and then <code>exit()</code> (that was stupid).</p>

<h3>New Home</h3>

<p>Lex has been moved from the Fuel GitHub organization to the PyroCMS organization (<a href="">https://github.com/pyrocms/lex</a>).  This was done because it was originally built for PyroCMS and it will be maintained by myself and the Pyro team.</p>

<p>With this change I have also re-named the Composer package to <code>pyrocms/lex</code>, so please update your composer.json files. If you try using the old one, it should tell you that it is replaced by the new one and to update your requirement.</p>

<p>As always if you run into issues go ahead and let me know via the Issue Tracker.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lex Parser 2.0]]></title>
    <link href="http://dandoescode.com/blog/2012/08/09/lex-parser-2-dot-0/"/>
    <updated>2012-08-09T00:00:00-04:00</updated>
    <id>http://dandoescode.com/blog/2012/08/09/lex-parser-2-dot-0</id>
    <content type="html"><![CDATA[<p>After 4 months of no progress or changes to the Lex Parser, I decided it was time for a face lift.  Although there arenâ€™t many new features in 2.0, the things that have changed are big.</p>

<h4>Changelog</h4>

<ul>
<li>PHP version requirement has been upped to 5.3</li>
<li>All code is now PSR-0, 1 and 2 compliant. (See here for more information on the standards.)</li>
<li>Lex is now a Composer Package (under the name fuel/lex).</li>
<li>The Lex GitHub repository has been moved under the fuelphp organization.</li>
<li>New  and  conditional tags have been added.</li>
</ul>


<p>To learn how to install and use Lex using Composer, read the README.</p>

<p>As I stated in the changelog, the repository has been moved under the PyroCMS organization on GitHub.  The URL is <a href="">https://github.com/pyrocms/lex</a>.  This was done to centralize the code, as well as give it a broader audience to help come up with new features and spot bugs faster.</p>
]]></content>
  </entry>
  
</feed>
